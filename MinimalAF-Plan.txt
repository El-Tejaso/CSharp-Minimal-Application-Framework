[Final features] TODO:

FINAL Items :0

	- feature: Modify public properties during test with test harness, autogenerate UI for this. 
		-> Polish this feature:
			-* window should be draggable and hideable.
			-* numerical inputs should have left-right buttons and be draggable, like in Blender
			-* All values must initialize themselves to whatever the class has set them to, now they are setting themselves to 0 or something
		
	- fix audio capabilities
		- design
		- handling multiple sources playing at the same time
	
	- profile startup, it takes too long
	
	- switch over to this notation, or back to _ notation, it was kidna useufull to be able to see at a glance which variables are fields
	
	-* tag version 0.1.0
Backlog: 
	- 3D lighting shaders

	-* Run arbitrary C# code	
	
	-* Python interop
		
	- fix: implement Disposable for Audiosource and possibly other classes
		since they are now pooled
			
	- test: Add unit tests for renderbuffer
		- find rare memory corruption bug that may now be fixed
			- this may just be from the texture being disposed and us trying to do OpenGL stuff on the GC thread, which we have basically fixed
	
	- make stencil stack-based somehow
		- am not sure how possible this is.
		
	-* Analyse allocations, we are getting a lot of GC pauses
		- only in debug mode though, and not in release
	
	-* PushDepth, something like pushmatrix but we're settign the 2D depth temporarily. it's like Z-Index in HTML but actually useful
		- probably no longer needed because we now have 'stacking offset'
	
	-* Try to understand how the depth is working, and why it doesnt work for 
	numbers greater than 1. Near far clipping planes?
	
	-* figure out what we should do with PushMatrix, now that we have other ways of setting the matrix wich will probably be better
	
Distant future:
	- feature: Some way to see the element tree in the test harness
		- Will need to be root-node-state based and done in AfterRender. Also figure out some way to move debug overlay to here as well	
		
	- feature: Add dynamic compilation (in general, not just test harness)
		-* find that ms doc page about c# dynamic compilation
		
	- fix: Why is it taking up so much memory in RAM. reduce this
	
	