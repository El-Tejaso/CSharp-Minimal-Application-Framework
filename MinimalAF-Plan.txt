TODO:
	- Give Elements their own coordinate systems, and drawing capabilities.
		- Give elements an ability to store the state of the drawing context
		- Give elements the ability to apply a coordinate system of their choosing to the drawing
		- make CTX internal

	- Test harness that collates all unit tests
		- An Attribute is used to mark tests
			- This feature may be quite easy
		
		- Add dynamic compilation in future
			- This feature may be quite hard


Done so far:
	- Seperate app config and window management from Rendering and updating code. 
		- Move all drawing code into UIElement
		- Split UIElement into multiple files, since it will be big

Refactoring:
	- Move datatypes to where they are needed. Make them Core if they are cross-cutting

	- Enough with this wrapper pattern in CTX and Input.
		- rather than CTX.DrawRectangle, do 
			CTX.Rectangle.Draw();
			
			So we have far less code to maintain

	- use System.Drawing.Color rather than Color4, because it has a lot more presets
Later:
 
	- Framebuffer optimization
		- texture buffer resizing [Texture.cs ln 68]
			- currently created with new() each time

	- Custom render pipelines
		- boils down to rendering the same scene and all differently

	- implement Disposable for Audiosource and 	possibly other classes
		since they are now pooled
		
	- Add unit tests for renderbuffer
		- find rare memory corruption that may now be fixed
		
	- Strip down CTX class. Alot of useless stuff there imo

Later later:

	- C# dynamic compilation	